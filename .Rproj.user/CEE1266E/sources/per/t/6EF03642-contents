---
title: '2020-06-12'
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.

```{r}
# 先執行此行輸入學號
readline(prompt = "請輸入你的學號") -> studentId 


# 之後才執行以下程式
if(
  str_detect(studentId,'^[43](1[01][0-9]|9[0-9])[0-9]{5}$',negate=T) # condition: 是否輸入學號正確？
) {
  warning("你所輸入的學號不正確")
}
```

##寫一個check_package(pkgName)函數，它會檢查使用者是否有安裝pkgName值（class character，length=1）的套件，如果沒有就安裝
```{r}
# 測試
check_package <- function("pkgName") {if(!require("pkgName")){
    install.packages("pkgName")
}}





check_package("clipr")
check_package("SOAR")

```

##第三題
```{r}
askSilly_weather <- function(locationInput,dateInput){

   if(!require("jsonlite")){
    install.packages("jsonlite")}

  library(stringr)
  if(str_detect(locationInput,"台")){
    str_replace(locationInput,"台","臺")->locationInput
  }

  jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
  weather_next36hours

  (weather_next36hours$cwbopendata$dataset$location$locationName == locationInput) -> pick_location

  weather_next36hours$cwbopendata$dataset$location$weatherElement[pick_location][[1]] -> weatherAtLocation
  (weatherAtLocation$elementName=="MaxT") ->
    pick_MaxT
  (weatherAtLocation$elementName=="MinT") ->
    pick_MinT
  weatherAtLocation$time[pick_MaxT][[1]]$parameter$parameterName[[1]] -> maxT
  weatherAtLocation$time[pick_MinT][[1]]$parameter$parameterName[[1]] -> minT

  glue::glue("{locationInput} {dateInput} 氣溫，最高{maxT}度，最低{minT}度。")
}

library(lubridate)
askSilly_weather("台北市",today())
```

```{r}
# 檢視步驟耗時elapse time
system.time(
  jsonlite::fromJSON("https://opendata.cwb.gov.tw/fileapi/v1/opendataapi/F-C0032-001?Authorization=rdec-key-123-45678-011121314&format=JSON") ->
  weather_next36hours
)
```

